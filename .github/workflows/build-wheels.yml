
name: Build

on:
  workflow_dispatch:
    inputs:
      publish:
        description: Also publish version
        type: boolean
        required: false

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      # We need docker's cross architecture emulation to build ARM wheels.
      - if: startsWith(matrix.os, 'ubuntu')
        uses: crazy-max/ghaction-docker-buildx@v3.3.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # Configuration is passed via environment variables. See
        # https://cibuildwheel.readthedocs.io/en/stable/options/
        env:
          # Platform options
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7,<3.13"
          CIBW_SKIP: "pp* *-musllinux_*"  # Skip PyPy and musl.
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
          CIBW_ARCHS_LINUX: x86_64 aarch64
          # Testing
          CIBW_TEST_REQUIRES: "-r tests/requirements.txt"
          CIBW_TEST_COMMAND: pytest {package}/tests

      - uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: ./wheelhouse/*.whl

  release:
    runs-on: ubuntu-latest
    if: inputs.publish  # only publish to PyPI on tag pushes
    needs:
      - build_wheels
    environment:
      name: pypi
      url: https://pypi.org/p/pyfqmr
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution
      uses: pypa/gh-action-pypi-publish@release/v1
